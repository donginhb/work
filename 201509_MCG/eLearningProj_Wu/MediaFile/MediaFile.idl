// MediaFile.idl : IDL source for MediaFile.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (MediaFile.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	typedef struct {
		DWORD dwBitrate;
		DWORD dwFormatTag;
		DWORD dwSampleRate;
		DWORD dwChannels;		
	} MF_AUDIOPARAMS;
	typedef struct {
		DWORD dwFourCC;
		DWORD dwBitrate;
		DWORD dwHeight;
		DWORD dwWidth;
		DWORD dwFPS;
		DWORD dwQuality;
		DWORD dwSecPerKey;
	} MF_VIDEOPARAMS;
	[
		object,		
		uuid(FD1C87EB-98A9-4D23-A4CE-203D9D83FBF2),
		dual,
		helpstring("IMediaConvert Interface"),
		pointer_default(unique)
	]
	interface IMediaConvert : IDispatch
	{
		[id(1), helpstring("method SetupProgressHandler")] HRESULT SetupProgressHandler([in]long lwnd, [in]long lMsg);
		[id(2), helpstring("method SetupQueryAbort")] HRESULT SetupQueryAbort([in]long lWndAbortActive, [in]long *lpbAbort);
		[id(3), helpstring("method MediaGetDuration")] HRESULT MediaGetDuration([in]BSTR bstrMedia, [out]double *pdmsDuration);
		[id(4), helpstring("method Media2WMV_Param")] HRESULT Media2WMV_Param([in]BSTR bstrMedia, [in]long lAudioKiloBPS, [in]long lVideoKiloBPS, [in]BSTR bstrOutWMX, [in]BSTR bstrOutProfile);
		[id(5), helpstring("method Media2WMV")] HRESULT Media2WMV([in]BSTR bstrMedia, [in]BSTR bstrProfile, [in]BSTR bstrOutWMX);
		[id(6), helpstring("method Media2WMA")] HRESULT Media2WMA([in]BSTR bstrMedia, [in]BSTR bstrProfile, [in]BSTR bstrOutWMA);
		[id(7), helpstring("method Media2WMA_Param")] HRESULT Media2WMA_Param([in]BSTR bstrMedia, [in]long lKiloBPS, [in]BSTR bstrOutWMA, [in]BSTR bstrOutProfile);
		[id(8), helpstring("method MediaGetParams")] HRESULT MediaGetParams([in]BSTR bstrMedia, [out]MF_AUDIOPARAMS *pam, [out]MF_VIDEOPARAMS *pvm);
		[id(9), helpstring("method WMV2WMV_MBR")] HRESULT WMV2WMV_MBR([in]BSTR bstrMedia, [in]BSTR bstrMBRProfile,  [in]BSTR bstrOutput);
	};

[
	uuid(79C30566-4A72-4F6B-AC0D-17858BBBCE16),
	version(1.0),
	helpstring("MediaFile 1.0 Type Library")
]
library MEDIAFILELib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(5C366CA7-C3F5-4383-866B-CB8ECCAFE5C3),
		helpstring("MediaConvert Class")
	]
	coclass MediaConvert
	{
		[default] interface IMediaConvert;
	};
};
