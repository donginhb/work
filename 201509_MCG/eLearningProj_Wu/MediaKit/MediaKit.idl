// MediaKit.idl : IDL source for MediaKit.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (MediaKit.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	typedef enum {
		IMAGEFORMAT_KIT_BMP=0,
		IMAGEFORMAT_KIT_JPG=1,
		IMAGEFORMAT_KIT_PCX=2,
		IMAGEFORMAT_KIT_TIF=3,
		IMAGEFORMAT_KIT_PNG=4,
	} ENUMIMAGEFORMAT_KIT;
	typedef struct {
		DWORD dwBitrate;
		DWORD dwFormatTag;
		DWORD dwSampleRate;
		DWORD dwChannels;		
	} AUDIOPARAM;
	typedef struct {
		DWORD dwFourCC;
		DWORD dwBitrate;
		DWORD dwHeight;
		DWORD dwWidth;
		DWORD dwFPS;
		DWORD dwQuality;
		DWORD dwSecPerKey;
	} VIDEOPARAM;
	typedef struct {
		DWORD dwBitrate;
	} SCRIPTPARAM;
	typedef struct {
		AUDIOPARAM	ainfo;
		VIDEOPARAM	vinfo;
		SCRIPTPARAM	sinfo;
	} PROFILEPARAMS;
	[
		object,
		uuid(B86F4B76-BE82-4952-A26B-91F83866AD4C),
		dual,
		helpstring("IWMXUtility Interface"),
		pointer_default(unique)
	]
	interface IWMXUtility : IDispatch
	{
		[id(1), helpstring("method SetupProgressHandler")] HRESULT SetupProgressHandler([in]long lWnd, [in]long lMsg);
		[id(2), helpstring("method SetupQueryAbort")] HRESULT SetupQueryAbort([in]long lWndAbortActive, [in]long *lpbAbort);
		[id(3), helpstring("method MultiWMXAudio2Wav")] HRESULT MultiWMXAudio2Wav([in]BSTR bstrAudioList, [in]IUnknown *pManager, [in]BSTR bstrMixerTimers, [in]long lBitsPerSample, [in]long lChannels, [in]long lSampleRate, [in]BSTR bstrOutput);
		[id(4), helpstring("method MultiWMXAudioFromWav")] HRESULT MultiWMXAudioFromWav([in]BSTR bstrWMXList, [in]IUnknown *pManager, [in]BSTR bstrWave, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(5), helpstring("method MultiWMXDirectCopy")] HRESULT MultiWMXDirectCopy([in]BSTR bstrList, [in]VARIANT_BOOL vbVideo, [in]VARIANT_BOOL vbScript, [in]BSTR bstrOutput);
		[id(6), helpstring("method MultiWMXCopyWav")] HRESULT MultiWMXCopyWav([in]BSTR bstrList, [in]BSTR bstrWav, [in]BSTR bstrOrgProfile, [in]BSTR bstrOutput);
		[id(7), helpstring("method Wav2WMX")] HRESULT Wav2WMX([in]BSTR bstrWav, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(8), helpstring("method WavFromWMX")] HRESULT WavFromWMX([in]BSTR bstrWMX, [in]long lBitsPerSample, [in]long lChannels, [in]long lSampleRate, [in]BSTR bstrOutput);
		[id(9), helpstring("method IsWMXProtected")] HRESULT IsWMXProtected([in]BSTR bstrWMX, [out]VARIANT_BOOL *pvbProtected);
		[id(10), helpstring("method IsWMXProfileStreamCompatible")] HRESULT IsWMXProfileStreamCompatible([in]BSTR bstrWMX1, [in]BSTR bstrWMX2, [out]VARIANT_BOOL *pvbAudio, [out]VARIANT_BOOL *pvbVideo, [out]VARIANT_BOOL *pvbScript);
		[id(11), helpstring("method IsWMXProfileCompatible")] HRESULT IsWMXProfileCompatible([in]BSTR bstrWMX1, [in]BSTR bstrWMX2);
		[id(12), helpstring("method IsWMXIndexExisted")] HRESULT IsWMXIndexExisted([in]BSTR bstrWMX, [out]VARIANT_BOOL *pvbExisted);
		[id(13), helpstring("method GetWMXDuration")] HRESULT GetWMXDuration([in]BSTR bstrWMX, [out]double *pdmsLength);
		[id(14), helpstring("method GetWMXProfileInfo")] HRESULT GetWMXProfileInfo([in]BSTR bstrWMX, [out]AUDIOPARAM *painfo, [out]VIDEOPARAM *pvinfo, [out]SCRIPTPARAM *psinfo);
		[id(15), helpstring("method GetWMXAudioPeak")] HRESULT GetWMXAudioPeak([in]BSTR bstrWMX, [out]long *plPeakMin, [out]long *plPeakMax, [out]long *plMin, [out]long *plMax);
		[id(16), helpstring("method PRXGetParams")] HRESULT PRXGetParams([in]BSTR bstrPRX, [in]PROFILEPARAMS *pParam);
		[id(17), helpstring("method PRXSubtract")] HRESULT PRXSubtract([in]BSTR bstrPRX1, [in]VARIANT_BOOL vbVideo, [in]VARIANT_BOOL vbScript, [in]BSTR bstrPRX2);
		[id(18), helpstring("method PRXLower")] HRESULT PRXLower([in]BSTR bstrPRX, [in]VARIANT_BOOL vbAudioLower, [in]long lAudioSampleRate, [in]long lAudioChannels, [in]long lAudioKiloBPS, [in]VARIANT_BOOL vbVideoLower, [in]long lVideoSecPerKey, [in]long lVideoQuality, [in]long lVideoFPS, [in]long lVideoKiloBPS, [in]VARIANT_BOOL vbScriptLower, [in]long lScriptKiloBPS, [in]BSTR bstrOutPRX);
		[id(19), helpstring("method PRXFromWMX")] HRESULT PRXFromWMX([in]BSTR bstrWMX, [in]VARIANT_BOOL vbVideo, [in]long lFPS, [in]VARIANT_BOOL vbScript, [in]BSTR bstrOutPrx);
		[id(20), helpstring("method PRXGen")] HRESULT PRXGen([in]PROFILEPARAMS *pParam, [in]BSTR bstrGenPRX);
		[id(21), helpstring("method WMXMakeIndex")] HRESULT WMXMakeIndex([in]BSTR bstrWMX);
		[id(22), helpstring("method WMXAudioMultiply")] HRESULT WMXAudioMultiply([in]BSTR bstrWMX, [in]long lRatio_100, [in]VARIANT_BOOL vbCopyHeader, [in]VARIANT_BOOL vbCopyScript, [in]VARIANT_BOOL vbCopyMarker, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(23), helpstring("method WMXAudioNormalize")] HRESULT WMXAudioNormalize([in]BSTR bstrWMX, [in]long lPercentage_100, [in]VARIANT_BOOL vbCopyHeader, [in]VARIANT_BOOL vbCopyScript, [in]VARIANT_BOOL vbCopyMarker, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(24), helpstring("method WMXAudioReplace")] HRESULT WMXAudioReplace([in]BSTR bstrFile, [in]BSTR bstrReplace, [in]VARIANT_BOOL vbCopyHeader, [in]VARIANT_BOOL vbCopyScript, [in]VARIANT_BOOL vbCopyMarker, [in]BSTR bstrOutput);
		[id(25), helpstring("method WMXAudioFromWav")] HRESULT WMXAudioFromWav([in]BSTR bstrWMX, [in]BSTR bstrWav, [in]VARIANT_BOOL vbCopyHeader, [in]VARIANT_BOOL vbCopyScript, [in]VARIANT_BOOL vbCopyMarker, [in]BSTR bstrProfile, [in]BSTR bstrOutput);		
		[id(26), helpstring("method WMXConvert")] HRESULT WMXConvert([in]BSTR bstrWMX, [in]VARIANT_BOOL vbCopyHeader, [in]VARIANT_BOOL vbCopyScript, [in]VARIANT_BOOL vbCopyMarker, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(27), helpstring("method WMXCopy")] HRESULT WMXCopy([in]BSTR bstrWMX, [in]VARIANT_BOOL vbVideo, [in]VARIANT_BOOL vbScript, [in]VARIANT_BOOL vbCopyHeader, [in]VARIANT_BOOL vbCopyScript, [in]VARIANT_BOOL vbCopyMarker, [in]BSTR bstrOutput);
		[id(28), helpstring("method SpecWMXDumpScript")] HRESULT SpecWMXDumpScript([in]BSTR bstrWMX, [in]BSTR bstrOutTable);
		[id(29), helpstring("method SpecWMXMakeAVScript")] HRESULT SpecWMXMakeAVScript([in]BSTR bstrWMX, [in]VARIANT_BOOL vbCopyHeader, [in]VARIANT_BOOL vbCopyScript, [in]VARIANT_BOOL vbCopyMarker, [in]BSTR bstrOutWMX, [in]BSTR bstrOutTable);
		[id(30), helpstring("method MultiWMXMixer2Wav")] HRESULT MultiWMXMixer2Wav([in]BSTR bstrWav, [in]BSTR bstrLists, [in]BSTR bstrOutWav);
		[id(31), helpstring("method WMXFromImage")] HRESULT WMXFromImage([in]BSTR bstrImage, [in]long lmsDuration, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(32), helpstring("method WMXFromMuteAudio")] HRESULT WMXFromMuteAudio([in]long lmsDuration, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(33), helpstring("method WMXGetCoveredImages")] HRESULT WMXGetCoveredImages([in]BSTR bstrWMX, [in]ENUMIMAGEFORMAT_KIT eFormat, [in]long lmsTime, [in]BSTR bstrImagePrev, [in]BSTR bstrImageNext);
		[id(34), helpstring("method WMXGetNextImage")] HRESULT WMXGetNextImage([in]BSTR bstrWMX, [in]ENUMIMAGEFORMAT_KIT eFormat, [in]long lmsTime, [in]BSTR bstrOutImage);
		[id(35), helpstring("method WMXGetPrevImage")] HRESULT WMXGetPrevImage([in]BSTR bstrWMX, [in]ENUMIMAGEFORMAT_KIT eFormat, [in]long lmsTime, [in]BSTR bstrOutImage);		
		[id(36), helpstring("method WMX_DBG_GetSampleCount")] HRESULT WMX_DBG_GetSampleCount([in]BSTR bstrWMX, [out]long *plAudio, [out]long *plVideo, [out]long *plScript);
		[id(37), helpstring("method MultiWMXDirectAppend")] HRESULT MultiWMXDirectAppend([in]BSTR bstrWMXNameTable, [in]VARIANT_BOOL vbVideo, [in]VARIANT_BOOL vbScript, [in]BSTR bstrOutWMX);
		[id(38), helpstring("method MultiWMXOutput")] HRESULT MultiWMXOutput([in]BSTR bstrMain, [in]BSTR bstrAudioReplace, [in]BSTR bstrAudioMix,  [in]IUnknown *pManager,  [in]BSTR bstrProfile,  [in]BSTR bstrOutput);
		[id(39), helpstring("method WMXAudio2Wav")] HRESULT WMXAudio2Wav([in]BSTR bstrWMX, [in]long lmsStart, [in]long lmsStop, [in]long lBitsPerSample, [in]long lChannels, [in]long lSampleRate, [in]BSTR  bstrOutWav);
		[id(40), helpstring("method WMXDirectTrim")] HRESULT WMXDirectTrim([in]BSTR bstrWMX, [in]long lmsStart, [in]long lmsStop, [in]VARIANT_BOOL vbVideo, [in]VARIANT_BOOL vbScript, [in]BSTR bstrOutput);
		[id(41), helpstring("method WMXConvertTrim")] HRESULT WMXConvertTrim([in]BSTR bstrWMX, [in]long lmsStart, [in]long lmsStop, [in]VARIANT_BOOL vbVideo, [in]VARIANT_BOOL vbScript, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(42), helpstring("method MBRPrxGen")] HRESULT MBRPrxGen([in]long lA1kbps, [in]long lV1kps, [in]long lwV1, [in]long lhV1, [in]long lA2kbps, [in]long lV2kps, [in]long lwV2, [in]long lhV2, [in]long lA3kbps, [in]long lV3kps, [in]long lwV3, [in]long lhV3, [in]BSTR bstrPrxOut);
		[id(43), helpstring("method MultiWMXExport")] HRESULT MultiWMXExport([in]BSTR bstrList, [in]IUnknown *pAudioManager,  [in]IUnknown *pVideoManager, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(44), helpstring("method WMXReplaceAudio_Wav")] HRESULT WMXReplaceAudio_Wav([in]BSTR bstrFile, [in]IUnknown *pManager, [in]BSTR bstrReplace, [in]BSTR bstrProfile, [in]BSTR bstrOutput);
		[id(45), helpstring("method WMXAudioMixReplace2Wav")] HRESULT WMXAudioMixReplace2Wav([in]BSTR bstrWMX, [in]BSTR bstrReplaceList, [in]BSTR bstrMixList, [in]long lBitsPerSample, [in]long lChannels, [in]long lSampleRate, [in]BSTR  bstrOutputWav);
	};

[
	uuid(35069362-A436-41EB-A954-A90BF90FB190),
	version(1.0),
	helpstring("MediaKit 1.0 Type Library")
]
library MEDIAKITLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(3FD8AA90-1BB1-4FCB-90A3-0BB11AB9DA9A),
		helpstring("WMXUtility Class")
	]
	coclass WMXUtility
	{
		[default] interface IWMXUtility;
	};
};
